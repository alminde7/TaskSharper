<UserControl x:Class="TaskSharper.WPF.Common.Components.Notification.NotificationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TaskSharper.WPF.Common.Components.Notification"
             mc:Ignorable="d" 
                     
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             lex:ResxLocalizationProvider.DefaultAssembly="TaskSharper.WPF.Common"
             lex:LocalizeDictionary.DesignCulture="en-US"
             lex:ResxLocalizationProvider.DefaultDictionary="Resources"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:properties="clr-namespace:TaskSharper.WPF.Common.Properties"
             prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <Style TargetType="{x:Type Button}" x:Key="SnoozeNotificationButton">
            <Setter Property="Background" Value="#5AA1E3" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Height" Value="{Binding Source={x:Static properties:Settings.Default}, Path=ButtonHeight45}"/>
            <Setter Property="FontSize" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Header2Size}" />
            <Setter Property="Margin" Value="10,10,5,10"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="0" Background="{TemplateBinding Background}">
                            <Grid>
                                <Path x:Name="PathIcon" Width="15" Height="25" HorizontalAlignment="Left" Margin="17,0,0,0" />
                                <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5ca2e8" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter TargetName="PathIcon" Property="Fill" Value="AliceBlue" />
                            </Trigger>
                            
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#80bdf2" />
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding NotificationType}" Value="2">
                    <Setter Property="Content" Value="{lex:Loc Close}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding NotificationType}" Value="1">
                    <Setter Property="Content" Value="{lex:Loc Close}"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding NotificationType}" Value="0">
                    <Setter Property="Content" Value="{lex:Loc Snooze}"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel"  x:Key="PopUpBackground">
            <Setter Property="Background" Value="AliceBlue"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding NotificationType}" Value="2">
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF1C9C9" Offset="0.008"/>
                                <GradientStop Color="#FFFF2121" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding NotificationType}" Value="1">
                    <Setter Property="Background" Value="#fca635"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding NotificationType}" Value="0">
                    <Setter Property="Background" Value="AliceBlue"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button"  x:Key="CompleteDismissButton">
            <Setter Property="Background" Value="#5AA1E3" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="{Binding Source={x:Static properties:Settings.Default}, Path=Header2Size}" />
            <Setter Property="Content"  Value="{lex:Loc Complete}"/>
            <Setter Property="Height" Value="{Binding Source={x:Static properties:Settings.Default}, Path=ButtonHeight45}"/>
            <Setter Property="Margin" Value="5,10,10,10"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding NotificationEventType}" Value="Appointment">
                    <Setter Property="Content" Value="{lex:Loc Dismiss}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding NotificationType}" Value="2">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding NotificationType}" Value="1">
                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding NotificationType}" Value="0">
                    <Setter Property="Visibility" Value="Visible"></Setter>
                </DataTrigger>
            </Style.Triggers>

        </Style>
    </UserControl.Resources>
    <Popup Name="NotificationPopUp" IsOpen="{Binding IsPopupOpen}" StaysOpen="True" PlacementTarget="{Binding ElementName=MainPanel}"
           Placement="Center">
        <Border BorderBrush="#5ca2e8" BorderThickness="1"
                    Background="AliceBlue">
            <StackPanel Style="{StaticResource PopUpBackground}" Orientation="Vertical" Width="400">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" ></RowDefinition>
                        <RowDefinition Height="*" ></RowDefinition>
                        <RowDefinition Height="*" ></RowDefinition>
                        <RowDefinition Height="*" ></RowDefinition>
                        <RowDefinition Height="*" ></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{Binding NotificationTitle}" FontSize="18" FontWeight="Bold" Margin="10,5"></TextBlock>
                    <TextBlock Grid.Row="1" Text="{Binding NotificationMessage}" FontSize="16"  Width="auto" TextWrapping="WrapWithOverflow" Margin="10,10,10,10" ></TextBlock>
                    <TextBlock Grid.Row="2" Text="{Binding NotificationTimeText}" FontSize="16" Width="auto" TextWrapping="WrapWithOverflow" Margin="10,10,10,10"></TextBlock>
                    <Viewbox Grid.Row="3" Width="50" Height="60"  Margin="5">
                        <fa:ImageAwesome Icon="{Binding Category}" Foreground="CornflowerBlue" />
                    </Viewbox>
                    <StackPanel  Grid.Row="4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Style="{StaticResource SnoozeNotificationButton}" Command="{Binding CloseNotificationCommand}"></Button>
                            <Button Grid.Column="1" Style="{StaticResource CompleteDismissButton}" Command="{Binding CompleteTaskCommand}" ></Button>
                        </Grid>
                    </StackPanel>

                </Grid>
            </StackPanel>

        </Border>
    </Popup>
</UserControl>
