<UserControl x:Class="TaskSharper.Calender.WPF.Views.CalendarEventShowDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TaskSharper.Calender.WPF.Views"
             xmlns:p="clr-namespace:TaskSharper.Calender.WPF.Properties"
             xmlns:mvvm="http://prismlibrary.com/"
             xmlns:lex="http://wpflocalizeextension.codeplex.com"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             
             mvvm:ViewModelLocator.AutoWireViewModel="True"
             xmlns:providers="http://wpflocalizeextension.codeplex.com"
             lex:ResxLocalizationProvider.DefaultAssembly="TaskSharper.Calender.WPF"
             providers:LocalizeDictionary.DesignCulture="en-US"
             providers:ResxLocalizationProvider.DefaultDictionary="Resources"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style TargetType="{x:Type Label}" x:Key="DetailsLabelHeader">
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="Margin" Value="0,3,0,0"/>
        </Style>
        <Style TargetType="{x:Type Label}" x:Key="DetailsLabelContent">
            <Setter Property="FontSize" Value="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryFont1Size}" />
            <Setter Property="Margin" Value="0,3,0,0"/>
        </Style>
        <Style x:Key="TransparentBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="StackPanel"  x:Key="VisibilityTypeTask">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding EventIsTypeTask}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding EventIsTypeTask}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel"  x:Key="VisibilityTypeAppointment">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding EventIsTypeAppointment}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding EventIsTypeAppointment}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel"  x:Key="VisibilityStatusConfirmed">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding EventIsStatusConfirmed}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding EventIsStatusConfirmed}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="StackPanel"  x:Key="VisibilityStatusTentative">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding EventIsStatusTentative}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding EventIsStatusTentative}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
      
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="15*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="15*"/>
        </Grid.ColumnDefinitions>
        <Button Command="{Binding BackCommand}" Grid.Row="0" Grid.Column="0" Style="{StaticResource TransparentBtnStyle}">
            <fa:ImageAwesome Icon="ArrowCircleOutlineLeft" Margin="0,0,0,0" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}"/>
        </Button>
        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <Label Style="{StaticResource DetailsLabelHeader}" Content="{Binding SelectedEvent.Title}" />
        </StackPanel>
        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Grid.Column="1" Grid.Row="1">
            <StackPanel Orientation="Vertical" Margin="0,0,100,0">
                <StackPanel Orientation="Horizontal">
                    <Label  Style="{StaticResource DetailsLabelHeader}" Content="{lex:Loc Description}"></Label>
                </StackPanel>
                <StackPanel Orientation="Horizontal" >
                    <ScrollViewer PanningMode="VerticalOnly" MaxHeight="500" Width="300"
                                  PanningRatio="1" PanningDeceleration="500" VerticalScrollBarVisibility="Hidden" ManipulationBoundaryFeedback="ScrollViewer_ManipulationBoundaryFeedback">
                        <Label FontSize="18">
                            <Label.Content>
                                <AccessText TextWrapping="Wrap" Text="{Binding SelectedEvent.Description}"/>
                            </Label.Content>
                        </Label>
                    </ScrollViewer>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Style="{StaticResource DetailsLabelHeader}" Content="{lex:Loc Start}"></Label>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Style="{StaticResource DetailsLabelContent}" Content="{Binding SelectedEvent.Start}" ContentStringFormat="dd/MM/yyyy HH:mm" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Style="{StaticResource DetailsLabelHeader}" Content="{lex:Loc End}"></Label>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Style="{StaticResource DetailsLabelContent}" Content="{Binding SelectedEvent.End}" ContentStringFormat="dd/MM/yyyy HH:mm" />
                </StackPanel>
            </StackPanel>
            <StackPanel Orientation="Vertical" >
                <StackPanel Orientation="Horizontal">
                    <Label Style="{StaticResource DetailsLabelHeader}" Content="{lex:Loc Type}"></Label>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                    <StackPanel HorizontalAlignment="Center" Style="{StaticResource VisibilityTypeTask}">
                        <fa:ImageAwesome Icon="Tasks" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}"/>
                        <TextBlock HorizontalAlignment="Center" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}" Text="{lex:Loc Task}" />
                    </StackPanel>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource VisibilityTypeAppointment}">
                        <fa:ImageAwesome Icon="ListUl" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}"/>
                        <TextBlock HorizontalAlignment="Center" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}" Text="{lex:Loc Appointment}" />
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Label Style="{StaticResource DetailsLabelHeader}" Content="{lex:Loc Status}"></Label>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                    <StackPanel HorizontalAlignment="Center" Style="{StaticResource VisibilityStatusConfirmed}">
                        <fa:ImageAwesome Icon="CalendarCheckOutline" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}"/>
                        <TextBlock HorizontalAlignment="Center" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}" Text="{lex:Loc Confirmed}" />
                    </StackPanel>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left" Style="{StaticResource VisibilityStatusTentative}">
                        <fa:ImageAwesome Icon="CalendarPlusOutline" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}"/>
                        <TextBlock HorizontalAlignment="Center" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}" Text="{lex:Loc Tentative}" />
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </StackPanel>
        <Viewbox Stretch="Uniform" Grid.Column="1" Grid.Row="2">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Style="{StaticResource TransparentBtnStyle}" Command="{Binding EventDetailsClickCommand}">
                    <fa:ImageAwesome Icon="Edit" Foreground="{Binding Source={x:Static p:Settings.Default}, Path=PrimaryColor}" Opacity="{Binding TaskOpacity}"/>
                </Button>
            </StackPanel>
        </Viewbox>
    </Grid>
</UserControl>
