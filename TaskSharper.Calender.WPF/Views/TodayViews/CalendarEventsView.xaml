<UserControl x:Class="TaskSharper.Calender.WPF.Views.CalendarEventsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:views="clr-namespace:TaskSharper.Calender.WPF.Views"
             xmlns:p="clr-namespace:TaskSharper.Calender.WPF.Properties"
             xmlns:converters="clr-namespace:TaskSharper.Calender.WPF.Converters"
             mc:Ignorable="d" 
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             d:DesignHeight="300" d:DesignWidth="100">

    <UserControl.Resources>
        <converters:EnumBooleanConverter x:Key="EnumBooleanConverter"/>
        <Style x:Key="EventTypeStyle" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Event.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Appointment}" Value="true">
                    <Setter Property="Background" Value="DarkOliveGreen"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Event.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=Task}" Value="true">
                    <Setter Property="Background" Value="CornflowerBlue"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Event.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=None}" Value="true">
                    <Setter Property="Background" Value="DarkOliveGreen"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TransparentBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
   
    <Canvas Height="{Binding Source={x:Static p:Settings.Default}, Path=CalendarStructure_Height_1200}" x:Name="CalendarEvents">
        <ItemsControl ItemsSource="{Binding Backgrounds}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding LocX}"/>
                    <Setter Property="Canvas.Top" Value="{Binding LocY}"/>
                    <Setter Property="Height" Value="{Binding Height}"/>
                    <Setter Property="Width" Value="{Binding Path=ActualWidth, ElementName=CalendarEvents}"/>
                    <Setter Property="Canvas.ZIndex" Value="0"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Rectangle Fill="AliceBlue"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <ItemsControl ItemsSource="{Binding CalendarEvents}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.Left" Value="{Binding LocX}"/>
                    <Setter Property="Canvas.Top" Value="{Binding LocY}"/>
                    <Setter Property="Height" Value="{Binding Height}"/>
                    <Setter Property="Canvas.ZIndex" Value="1"/>
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Style="{StaticResource TransparentBtnStyle}" Command="{Binding EventClickCommand}">
                        <Grid x:Name="EventsContainer">
                            <Label x:Name="SimultaneousEvents" Content="{Binding Width}" Visibility="Collapsed"></Label>
                            <TextBlock Grid.Row="0" Style="{StaticResource EventTypeStyle}">
                                <Label Content="{Binding Event.Title}"/>
                            </TextBlock>

                            <TextBlock Grid.Row="1" Style="{StaticResource EventTypeStyle}">
                                <Label Content="{Binding Event.Description}"/>
                            </TextBlock>
                            <Popup Grid.Row="1" Name="eventPop" IsOpen="{Binding IsPopupOpen}" StaysOpen="False">
                                <Border BorderBrush="Blue" BorderThickness="1"
                                        Background="AliceBlue">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="{Binding Event.Title}" FontWeight="Bold" Margin="10,5"></TextBlock>
                                        <TextBlock Text="{Binding Event.Description}"
                                                   Margin="10,5"
                                                   Width="150" TextWrapping="Wrap"/>
                                        <Button Command="{Binding EventDetailsClickCommand}">More...</Button>
                                    </StackPanel>
                                </Border>
                            </Popup>

                            <Grid.Width>
                                <MultiBinding Converter="{converters:WidthConverter}">
                                    <Binding Path="ActualWidth" ElementName="CalendarEvents" />
                                    <Binding Path="Content" ElementName="SimultaneousEvents" />
                                </MultiBinding>
                            </Grid.Width>
                            <Grid.RowDefinitions>

                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                        </Grid>
                        <i:Interaction.Triggers>
                            <!-- This event trigger will execute the action when the corresponding event is raised by the ListBox. -->
                            <i:EventTrigger EventName="SizeChanged">
                                <!-- This action will invoke the selected command in the view model and pass the parameters of the event to it. -->
                                <prism:InvokeCommandAction Command="{Binding SizeChangedCommand}" CommandParameter="{Binding Path=ActualWidth, ElementName=CalendarEvents}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Loaded">
                                <prism:InvokeCommandAction Command="{Binding LoadedCommand}" CommandParameter="{Binding Path=ActualWidth, ElementName=CalendarEvents}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Rectangle  Canvas.Left="{Binding TimeLine.LocX}"
                    Canvas.Top="{Binding TimeLine.LocY}"
                    Height="{Binding TimeLine.Height}"
                    Width="{Binding Path=ActualWidth, ElementName=CalendarEvents}"
                    Canvas.ZIndex="2"
                    Stroke="Black" Fill="Gray"
                    StrokeDashArray="{Binding TimeLine.StrokeDashArray}"
                    StrokeThickness="4"/>
    </Canvas>
</UserControl>
